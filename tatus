[1mdiff --git a/src/main/java/client/ClientAventure.java b/src/main/java/client/ClientAventure.java[m
[1mindex 9bd5c51..2aa0e49 100644[m
[1m--- a/src/main/java/client/ClientAventure.java[m
[1m+++ b/src/main/java/client/ClientAventure.java[m
[36m@@ -8,6 +8,9 @@[m [mimport java.io.File;[m
 [m
 public class ClientAventure {[m
     public static void main(String[] args) {[m
[31m-[m
[32m+[m[32m        File fichier = new File( "scenario"+ File.separator + "scenario_0" + ".txt");[m
[32m+[m[32m        Scenario s1 = LectureFichierTexte.lecture(fichier);[m
[32m+[m[32m        Aventure a1 = new Aventure(s1);[m
[32m+[m[32m        System.out.println(a1.niveau1(1));[m
     }[m
 }[m
[1mdiff --git a/src/main/java/lectureEcritureFichier/LectureFichierTexte.java b/src/main/java/lectureEcritureFichier/LectureFichierTexte.java[m
[1mindex 008da64..7b0f20f 100644[m
[1m--- a/src/main/java/lectureEcritureFichier/LectureFichierTexte.java[m
[1m+++ b/src/main/java/lectureEcritureFichier/LectureFichierTexte.java[m
[36m@@ -17,5 +17,15 @@[m [mpublic class LectureFichierTexte {[m
      * @return un objet de type Scenario[m
      */[m
     public static Scenario lecture (File fichier){[m
[31m-[m
[32m+[m[32m        Scenario scenario = new Scenario();[m
[32m+[m[32m        try{[m
[32m+[m[32m            Scanner scanner = new Scanner(fichier);[m
[32m+[m[32m            while(scanner.hasNext()){[m
[32m+[m[32m                scenario.ajout(new Quete(scanner.nextLine()));[m
[32m+[m[32m            }[m
[32m+[m[32m        } catch (FileNotFoundException e) {[m
[32m+[m[32m            System.err.println(e.getMessage());[m
[32m+[m[32m        }[m
[32m+[m[32m        return scenario;[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/src/main/java/modele/Aventure.java b/src/main/java/modele/Aventure.java[m
[1mindex d778c14..eb6b495 100644[m
[1m--- a/src/main/java/modele/Aventure.java[m
[1m+++ b/src/main/java/modele/Aventure.java[m
[36m@@ -20,7 +20,9 @@[m [mpublic class Aventure {[m
      * @param parScenario un objet de type Scenario[m
      */[m
     public Aventure(Scenario parScenario){[m
[31m-[m
[32m+[m[32m        scenarioActualis√© = parScenario.getProvQuete();[m
[32m+[m[32m        queteDejaRealisee = new ArrayList<>();[m
[32m+[m[32m        faireBoss = false;[m
     }[m
 [m
     /**[m
[36m@@ -31,7 +33,29 @@[m [mpublic class Aventure {[m
      * @return le champ queteDejaRealisee, soit la liste des qu√™tes r√©alis√©e durant l'aventure[m
      */[m
     public ArrayList<Integer> niveau1(int parChoix){[m
[31m-[m
[32m+[m[32m        Joueur joueur = new Joueur();[m
[32m+[m[32m        System.out.println("L'aventure du heros commence !");[m
[32m+[m[32m        //solution efficace[m
[32m+[m[32m        if (parChoix == 1) {[m
[32m+[m[32m            while (finAventure() != true) {[m
[32m+[m[32m                if (assezExperimente(joueur) == true){[m
[32m+[m[32m                    faireBoss = true;[m
[32m+[m[32m                }[m
[32m+[m[32m                realisationQuete(choixProchaineQuete(joueur),joueur);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        // solution exhaustive[m
[32m+[m[32m        if (parChoix == 2){[m
[32m+[m[32m            while (finAventure() != true){[m
[32m+[m[32m                while (scenarioActualis√©.size() != 1){[m
[32m+[m[32m                    realisationQuete(choixProchaineQuete(joueur),joueur);[m
[32m+[m[32m                }[m
[32m+[m[32m                faireBoss = true;[m
[32m+[m[32m                realisationQuete(choixProchaineQuete(joueur),joueur);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        System.out.println("Fin de l'aventure !");[m
[32m+[m[32m        return queteDejaRealisee;[m
     }[m
 [m
     /**[m
[36m@@ -41,7 +65,13 @@[m [mpublic class Aventure {[m
      * @return un bool√©en[m
      */[m
     public boolean finAventure(){[m
[31m-[m
[32m+[m[32m        if (queteDejaRealisee != null) {[m
[32m+[m[32m            for (int quete : queteDejaRealisee) {[m
[32m+[m[32m                if (quete == 0)[m
[32m+[m[32m                    return true;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
     }[m
 [m
     /**[m
[36m@@ -52,7 +82,7 @@[m [mpublic class Aventure {[m
      * @return un entier √©quivalent √† la distance entre les deux positions[m
      */[m
     public int calculDeplacement(int [] posDepart, int [] posFin){[m
[31m-[m
[32m+[m[32m        return Math.abs(posFin[0]-posDepart[0]) + Math.abs(posFin[1]-posDepart[1]);[m
     }[m
 [m
     /**[m
[36m@@ -61,7 +91,9 @@[m [mpublic class Aventure {[m
      * @return un string[m
      */[m
     public String affichePosition(int [] parPos){[m
[31m-[m
[32m+[m[32m        int x = parPos[0];[m
[32m+[m[32m        int y = parPos[1];[m
[32m+[m[32m        return "[" + x + "," + y + "]";[m
     }[m
 [m
     /**[m
[36m@@ -73,7 +105,29 @@[m [mpublic class Aventure {[m
      * @return prochaineQuete, un objet de type quete, qui est la prochaine quete √† r√©aliser[m
      */[m
     public Quete choixProchaineQuete(Joueur parJoueur){[m
[31m-[m
[32m+[m[32m        int minDeplacement = 1000;[m
[32m+[m[32m        Quete prochaineQuete = new Quete();[m
[32m+[m[32m        int [] nouvellePosition = new int[2];[m
[32m+[m[32m        for (int i = 0; i< scenarioActualis√©.size(); i++){[m
[32m+[m[32m            // si les conditions pour r√©aliser la qu√™te finale sont r√©alis√©es[m
[32m+[m[32m            if (assezExperimente(parJoueur) == true && scenarioActualis√©.get(i).getNumero() == 0 && preconditionsRemplies(scenarioActualis√©.get(i),parJoueur) == true){[m
[32m+[m[32m                nouvellePosition = scenarioActualis√©.get(i).getPosition();[m
[32m+[m[32m                prochaineQuete = scenarioActualis√©.get(i);[m
[32m+[m[32m                minDeplacement = calculDeplacement(parJoueur.getPosition(),scenarioActualis√©.get(i).getPosition());[m
[32m+[m[32m            }[m
[32m+[m[32m            // sinon cherche la qu√™te la plus proche[m
[32m+[m[32m            else if (calculDeplacement(parJoueur.getPosition(),scenarioActualis√©.get(i).getPosition())< minDeplacement && preconditionsRemplies(scenarioActualis√©.get(i),parJoueur) == true){[m
[32m+[m[32m                nouvellePosition = scenarioActualis√©.get(i).getPosition();[m
[32m+[m[32m                prochaineQuete = scenarioActualis√©.get(i);[m
[32m+[m[32m                minDeplacement = calculDeplacement(parJoueur.getPosition(),scenarioActualis√©.get(i).getPosition());[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        parJoueur.setPosition(nouvellePosition);[m
[32m+[m[32m        System.out.println("Le heros se deplace en : " + affichePosition(nouvellePosition));[m
[32m+[m[32m        System.out.println("La prochaine quete de notre heros est la suivante : " + prochaineQuete.getIntitule());[m
[32m+[m[32m        parJoueur.setNbDeplacement(minDeplacement);[m
[32m+[m[32m        parJoueur.setTempsDeJeu(minDeplacement);[m
[32m+[m[32m        return prochaineQuete;[m
     }[m
 [m
     /**[m
[36m@@ -84,7 +138,14 @@[m [mpublic class Aventure {[m
      * @return un bool√©en[m
      */[m
     public boolean assezExperimente(Joueur parJoueur){[m
[31m-[m
[32m+[m[32m        for (Quete quete : scenarioActualis√©){[m
[32m+[m[32m            if (quete.getNumero() == 0){[m
[32m+[m[32m                if (parJoueur.getExperience() >= quete.getExp()){[m
[32m+[m[32m                    return true;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
     }[m
 [m
     /**[m
[36m@@ -94,20 +155,49 @@[m [mpublic class Aventure {[m
      * @return un bool√©en[m
      */[m
     public boolean preconditionsRemplies(Quete parQuete, Joueur parJoueur){[m
[31m-[m
[32m+[m[32m        int [] precond = parQuete.getPrecondition();[m
[32m+[m[32m        // si il n'y a pas de pr√©conditions[m
[32m+[m[32m        if (parQuete.testPrecon() == true) {[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m        else {[m
[32m+[m[32m            // si la qu√™te est la qu√™te finale[m
[32m+[m[32m            if (parQuete.getNumero() == 0){[m
[32m+[m[32m                // si les pr√©conditions sont respect√©es pour la qu√™te 0[m
[32m+[m[32m                if (assezExperimente(parJoueur) == true && faireBoss == true && accesQuete(parQuete, precond) == true) {[m
[32m+[m[32m                    return true;[m
[32m+[m[32m                }[m
[32m+[m[32m                else {[m
[32m+[m[32m                    return false;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            else {[m
[32m+[m[32m                // si la qu√™te parQuete respecte les pr√©conditions[m
[32m+[m[32m                if (accesQuete(parQuete, precond) == true) {[m
[32m+[m[32m                    return true;[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    return false;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
     }[m
 [m
     /**[m
      * Cette m√©thode permet de v√©rifier que le joueur a bien r√©alis√©e les qu√™tes n√©cessaires[m
      * elle est utilis√©e et appel√©e dans la m√©thode pr√©conditionsRemplies[m
      * si les pr√©conditions sont remplies renvoie true[m
[31m-     * sinon rencoie false[m
[32m+[m[32m     * sinon renvoie false[m
      * @param parQuete un objet de type Quete[m
      * @param parPrecon un objet de type Joueur[m
      * @return un bool√©en[m
      */[m
     public boolean accesQuete(Quete parQuete, int [] parPrecon){[m
[31m-[m
[32m+[m[32m        if ((queteDejaRealisee.contains(parPrecon[0]) && parPrecon[0] != 0) || (queteDejaRealisee.contains(parPrecon[1]) && parPrecon[1] != 0)) {[m
[32m+[m[32m            if (((queteDejaRealisee.contains(parPrecon[2]) && parPrecon[2] != 0) || (queteDejaRealisee.contains(parPrecon[3]) && parPrecon[3] != 0)) || (parPrecon[2] == 0 && parPrecon[3] == 0)){[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
     }[m
 [m
     /**[m
[36m@@ -116,7 +206,13 @@[m [mpublic class Aventure {[m
      * @param parJoueur un objet de type Joueur[m
      */[m
     public void realisationQuete(Quete parQuete, Joueur parJoueur){[m
[31m-[m
[32m+[m[32m        scenarioActualis√©.remove(parQuete);[m
[32m+[m[32m        queteDejaRealisee.add(parQuete.getNumero());[m
[32m+[m[32m        if (parQuete.getNumero() != 0) {[m
[32m+[m[32m            parJoueur.setExperience(parQuete.getExp());[m
[32m+[m[32m            System.out.println("Le heros gagne " + parQuete.getExp() + " d'exp et possede desormais " + parJoueur.getExperience() + " points d'exp.");[m
[32m+[m[32m        }[m
[32m+[m[32m        parJoueur.setTempsDeJeu(parQuete.getDuree());[m
     }[m
 [m
     /**[m
[36m@@ -124,6 +220,6 @@[m [mpublic class Aventure {[m
      * @return un string[m
      */[m
     public String toString(){[m
[31m-[m
[32m+[m[32m        return "Voici les qu√™tes : " + scenarioActualis√© + ".";[m
     }[m
 }[m
[1mdiff --git a/src/main/java/modele/Joueur.java b/src/main/java/modele/Joueur.java[m
[1mindex 39ef688..2efb92d 100644[m
[1m--- a/src/main/java/modele/Joueur.java[m
[1m+++ b/src/main/java/modele/Joueur.java[m
[36m@@ -24,7 +24,11 @@[m [mpublic class Joueur {[m
      * - son nombre de d√©plcement[m
      */[m
     public Joueur(){[m
[31m-[m
[32m+[m[32m        int experience = 0;[m
[32m+[m[32m        position[0] = 0;[m
[32m+[m[32m        position[1] = 0;[m
[32m+[m[32m        int tempsDeJeu = 0;[m
[32m+[m[32m        int nbDepalcement = 0;[m
     }[m
 [m
     /**[m
[36m@@ -32,7 +36,7 @@[m [mpublic class Joueur {[m
      * @param parTemps un int[m
      */[m
     public void setTempsDeJeu(int parTemps){[m
[31m-[m
[32m+[m[32m        tempsDeJeu += parTemps;[m
     }[m
 [m
     /**[m
[36m@@ -40,7 +44,7 @@[m [mpublic class Joueur {[m
      * @param parExp un int[m
      */[m
     public void setExperience(int parExp){[m
[31m-[m
[32m+[m[32m        experience += parExp;[m
     }[m
 [m
     /**[m
[36m@@ -48,7 +52,7 @@[m [mpublic class Joueur {[m
      * @param parDeplacement un int[m
      */[m
     public void setNbDeplacement(int parDeplacement){[m
[31m-[m
[32m+[m[32m        nbDeplacement += parDeplacement;[m
     }[m
 [m
     /**[m
[36m@@ -56,7 +60,7 @@[m [mpublic class Joueur {[m
      * @param parPosition un tableau d'int[m
      */[m
     public void setPosition(int [] parPosition){[m
[31m-[m
[32m+[m[32m        position = parPosition;[m
     }[m
 [m
     /**[m
[36m@@ -64,7 +68,7 @@[m [mpublic class Joueur {[m
      * @return un tableau d'int[m
      */[m
     public int [] getPosition(){[m
[31m-[m
[32m+[m[32m        return position;[m
     }[m
 [m
     /**[m
[36m@@ -72,6 +76,6 @@[m [mpublic class Joueur {[m
      * @return un int[m
      */[m
     public int getExperience(){[m
[31m-[m
[32m+[m[32m        return experience;[m
     }[m
 }[m
[1mdiff --git a/src/main/java/modele/Quete.java b/src/main/java/modele/Quete.java[m
[1mindex 627e7fb..3ffd0c1 100644[m
[1m--- a/src/main/java/modele/Quete.java[m
[1m+++ b/src/main/java/modele/Quete.java[m
[36m@@ -30,7 +30,42 @@[m [mpublic class Quete {[m
      * @param ligne un string[m
      */[m
     public Quete(String ligne){[m
[31m-[m
[32m+[m[32m        Scanner scanner = new Scanner(ligne).useDelimiter("\\|");[m
[32m+[m[32m        while(scanner.hasNext()) {[m
[32m+[m[32m            this.numero = scanner.nextInt();[m
[32m+[m[32m            String pos = scanner.next();[m
[32m+[m[32m            //extraction de la position[m
[32m+[m[32m            position = new int [2];[m
[32m+[m[32m            pos = pos.replace("(","");[m
[32m+[m[32m            pos = pos.replace(")","");[m
[32m+[m[32m            pos = pos.replace(" ","");[m
[32m+[m[32m            Scanner scanPos = new Scanner(pos).useDelimiter(",");[m
[32m+[m[32m            int i = 0;[m
[32m+[m[32m            while(scanPos.hasNext()){[m
[32m+[m[32m                String morceau = scanPos.next();[m
[32m+[m[32m                position[i] = Integer.parseInt(morceau);[m
[32m+[m[32m                i++;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            String precond = scanner.next();[m
[32m+[m[32m            //extraction de la precondition[m
[32m+[m[32m            precondition = new int [4];[m
[32m+[m[32m            precond = precond.replace("(","");[m
[32m+[m[32m            precond = precond.replace(")","");[m
[32m+[m[32m            precond = precond.replace(" ","");[m
[32m+[m[32m            Scanner scanPrecondition = new Scanner(precond).useDelimiter(",");[m
[32m+[m[32m            int j = 0;[m
[32m+[m[32m            while (scanPrecondition.hasNext()){[m
[32m+[m[32m                String extrait = scanPrecondition.next();[m
[32m+[m[32m                if (! extrait.equals(""))[m
[32m+[m[32m                    precondition[j] = Integer.parseInt(extrait);[m
[32m+[m[32m                j++;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            this.duree = scanner.nextInt();[m
[32m+[m[32m            this.exp = scanner.nextInt();[m
[32m+[m[32m            this.intitule = scanner.next();[m
[32m+[m[32m        }[m
     }[m
 [m
     /**[m
[36m@@ -46,7 +81,12 @@[m [mpublic class Quete {[m
      * @return boolean[m
      */[m
     public boolean testPrecon (){[m
[31m-[m
[32m+[m[32m        for (int pre : precondition){[m
[32m+[m[32m            if (pre != 0){[m
[32m+[m[32m                return false;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return true;[m
     }[m
 [m
     /**[m
[36m@@ -54,7 +94,7 @@[m [mpublic class Quete {[m
      * @return un tableau d'int[m
      */[m
     public int [] getPrecondition(){[m
[31m-[m
[32m+[m[32m        return precondition;[m
     }[m
 [m
     /**[m
[36m@@ -62,7 +102,7 @@[m [mpublic class Quete {[m
      * @return un string[m
      */[m
     public String getIntitule(){[m
[31m-[m
[32m+[m[32m        return intitule;[m
     }[m
 [m
     /**[m
[36m@@ -70,7 +110,7 @@[m [mpublic class Quete {[m
      * @return un tableau d'int[m
      */[m
     public int [] getPosition(){[m
[31m-[m
[32m+[m[32m        return position;[m
     }[m
 [m
     /**[m
[36m@@ -78,7 +118,7 @@[m [mpublic class Quete {[m
      * @return un int[m
      */[m
     public int getNumero(){[m
[31m-[m
[32m+[m[32m        return numero;[m
     }[m
 [m
     /**[m
[36m@@ -86,7 +126,7 @@[m [mpublic class Quete {[m
      * @return un int[m
      */[m
     public int getExp(){[m
[31m-[m
[32m+[m[32m        return exp;[m
     }[m
 [m
     /**[m
[36m@@ -94,7 +134,7 @@[m [mpublic class Quete {[m
      * @return un int[m
      */[m
     public int getDuree(){[m
[31m-[m
[32m+[m[32m        return duree;[m
     }[m
 [m
     /**[m
[36m@@ -102,6 +142,6 @@[m [mpublic class Quete {[m
      * @return String[m
      */[m
     public String toString() {[m
[31m-[m
[32m+[m[32m        return numero + "," + Arrays.toString(position) + "," + Arrays.toString(precondition) + "," + duree + "," + exp + "," + intitule;[m
     }[m
 }[m
[1mdiff --git a/src/main/java/modele/Scenario.java b/src/main/java/modele/Scenario.java[m
[1mindex ac8eb7f..207eb8d 100644[m
[1m--- a/src/main/java/modele/Scenario.java[m
[1m+++ b/src/main/java/modele/Scenario.java[m
[36m@@ -18,14 +18,14 @@[m [mpublic class  Scenario extends LectureFichierTexte {[m
      * Le constructeur de la classe Scenario, elle permet d'instancier le champ provQuete[m
      */[m
     public Scenario(){[m
[31m-[m
[32m+[m[32m        provQuete = new ArrayList<>();[m
     }[m
 [m
     /** Cette m√©thode ajoute le param√®tre de type quete √† l'objet appelant[m
      * @param quete, un objet Quete[m
      */[m
     public void ajout(Quete quete){[m
[31m-[m
[32m+[m[32m        provQuete.add(quete);[m
     }[m
 [m
     /**[m
[36m@@ -33,7 +33,7 @@[m [mpublic class  Scenario extends LectureFichierTexte {[m
      * @return une ArrayList de Quete[m
      */[m
     public ArrayList <Quete> getProvQuete(){[m
[31m-[m
[32m+[m[32m        return provQuete;[m
     }[m
 [m
     /**[m
[36m@@ -41,6 +41,6 @@[m [mpublic class  Scenario extends LectureFichierTexte {[m
      * @return String;[m
      */[m
     public String toString() {[m
[31m-[m
[32m+[m[32m        return provQuete.size() + " " + provQuete;[m
     }[m
 }[m
[1mdiff --git a/target/classes/client/ClientAventure.class b/target/classes/client/ClientAventure.class[m
[1mindex f893a88..c04c6a2 100644[m
Binary files a/target/classes/client/ClientAventure.class and b/target/classes/client/ClientAventure.class differ
[1mdiff --git a/target/classes/client/ClientJoueur.class b/target/classes/client/ClientJoueur.class[m
[1mindex ce2da13..97daa3d 100644[m
Binary files a/target/classes/client/ClientJoueur.class and b/target/classes/client/ClientJoueur.class differ
[1mdiff --git a/target/classes/client/ClientLectureFichierTexte.class b/target/classes/client/ClientLectureFichierTexte.class[m
[1mindex b02face..e8ca46c 100644[m
Binary files a/target/classes/client/ClientLectureFichierTexte.class and b/target/classes/client/ClientLectureFichierTexte.class differ
[1mdiff --git a/target/classes/client/ClientQuete.class b/target/classes/client/ClientQuete.class[m
[1mindex d4c5361..f243f70 100644[m
Binary files a/target/classes/client/ClientQuete.class and b/target/classes/client/ClientQuete.class differ
[1mdiff --git a/target/classes/client/ClientScenario.class b/target/classes/client/ClientScenario.class[m
[1mindex aa2ad31..8d87706 100644[m
Binary files a/target/classes/client/ClientScenario.class and b/target/classes/client/ClientScenario.class differ
[1mdiff --git a/target/classes/modele/Aventure.class b/target/classes/modele/Aventure.class[m
[1mindex 53d7c4f..1044181 100644[m
Binary files a/target/classes/modele/Aventure.class and b/target/classes/modele/Aventure.class differ
[1mdiff --git a/target/classes/modele/Joueur.class b/target/classes/modele/Joueur.class[m
[1mindex b98d03d..af170db 100644[m
Binary files a/target/classes/modele/Joueur.class and b/target/classes/modele/Joueur.class differ
[1mdiff --git a/target/classes/modele/Quete.class b/target/classes/modele/Quete.class[m
[1mindex 6813bb0..d122144 100644[m
Binary files a/target/classes/modele/Quete.class and b/target/classes/modele/Quete.class differ
[1mdiff --git a/target/classes/modele/Scenario.class b/target/classes/modele/Scenario.class[m
[1mindex 46c1af6..e86ff1b 100644[m
Binary files a/target/classes/modele/Scenario.class and b/target/classes/modele/Scenario.class differ
